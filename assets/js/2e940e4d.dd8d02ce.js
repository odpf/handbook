"use strict";(self.webpackChunkfirehose=self.webpackChunkfirehose||[]).push([[335],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),s=c(n),d=a,g=s["".concat(u,".").concat(d)]||s[d]||p[d]||l;return n?r.createElement(g,o(o({ref:t},m),{},{components:n})):r.createElement(g,o({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=s;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},249:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return p}});var r=n(7462),a=n(3366),l=(n(7294),n(3905)),o=["components"],i={},u="General",c={unversionedId:"programming/general",id:"programming/general",title:"General",description:"Configurations",source:"@site/docs/programming/general.md",sourceDirName:"programming",slug:"/programming/general",permalink:"/handbook/programming/general",draft:!1,editUrl:"https://github.com/odpf/handbook/edit/master/docs/docs/programming/general.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Release",permalink:"/handbook/engineering/release"},next:{title:"Go",permalink:"/handbook/programming/go"}},m={},p=[{value:"Configurations",id:"configurations",level:2},{value:"Metrics",id:"metrics",level:3}],s={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"general"},"General"),(0,l.kt)("h2",{id:"configurations"},"Configurations"),(0,l.kt)("p",null,"Each of the configs should be namespaced according to the role/usage/context that they have followed by the type/implementation of it. For example - for statsd url - statsd is an implementation for metric collection hence the config would look like metric.statsd.url\nAny delimiters depending on the language/framework can be used. Like \u201c.\u201d or \u201c","_","\u201d or \u201c/\u201d etc. Default would be ",(0,l.kt)("inlineCode",{parentName:"p"},".")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Namespace"),(0,l.kt)("th",{parentName:"tr",align:null},"Type (optional)"),(0,l.kt)("th",{parentName:"tr",align:null},"Config Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"metric.statsd.url"),(0,l.kt)("td",{parentName:"tr",align:null},"metric"),(0,l.kt)("td",{parentName:"tr",align:null},"statsd"),(0,l.kt)("td",{parentName:"tr",align:null},"url")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"schema.proto.name"),(0,l.kt)("td",{parentName:"tr",align:null},"schema"),(0,l.kt)("td",{parentName:"tr",align:null},"proto"),(0,l.kt)("td",{parentName:"tr",align:null},"name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"dlq.kafka.brokers"),(0,l.kt)("td",{parentName:"tr",align:null},"dlq"),(0,l.kt)("td",{parentName:"tr",align:null},"kafka"),(0,l.kt)("td",{parentName:"tr",align:null},"brokers")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"dlq.enable"),(0,l.kt)("td",{parentName:"tr",align:null},"dlq"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"enable")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"source.kafka.consumer.config.auto.commit.enable"),(0,l.kt)("td",{parentName:"tr",align:null},"source"),(0,l.kt)("td",{parentName:"tr",align:null},"kafka"),(0,l.kt)("td",{parentName:"tr",align:null},"consumer.config.auto.commit.enable")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"schema.registry.stencil.urls"),(0,l.kt)("td",{parentName:"tr",align:null},"schema.registry"),(0,l.kt)("td",{parentName:"tr",align:null},"stencil"),(0,l.kt)("td",{parentName:"tr",align:null},"urls")))),(0,l.kt)("p",null,"These are just guidelines and might not be extensive enough to cover all use-cases. Please use this to give it a thought."),(0,l.kt)("h3",{id:"metrics"},"Metrics"),(0,l.kt)("p",null,"The metrics and labels must be compliant with the ",(0,l.kt)("a",{parentName:"p",href:"https://prometheus.io/docs/concepts/data_model/#metric-names-and-labels"},"Prometheus data model"),".\nThe metric and label conventions presented in this document serve as both a;",(0,l.kt)("a",{parentName:"p",href:"https://prometheus.io/docs/practices/naming/"},"style-guide")," and a collection of best practices."))}d.isMDXComponent=!0}}]);